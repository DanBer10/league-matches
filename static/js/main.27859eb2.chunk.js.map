{"version":3,"sources":["App.js","index.js"],"names":["App","useState","setGameId","champion","setChampion","queue","setQueue","name","setName","lane","setLane","summonerLevel","setSummonerLevel","profileIconId","setProfileIconId","setAccountId","summonerId","setSummonerId","summonerName","setSummonerName","input","setInput","totalGames","setTotalGames","totalRankedGames","setTotalRankedGames","rank","setRank","tier","setTier","flexRank","setFlexRank","flexTier","setFlexTier","wins","setWins","losses","setLosses","hotStreak","setHotStreak","summonerKills","setSummonerKills","summonerDeaths","setSummonerDeaths","summonerAssists","setSummonerAssists","summonerDamageDoneToChampions","setSummonerDamageDoneToChampions","teamOne","setTeamOne","teamTwo","setTeamTwo","summonerGold","setSummonerGold","summonersInMatch","setSummonersInMatch","summonerChampionId","setSummonerChampionId","visionScore","setVisionScore","championPoints","setChampionPoints","championLevel","setChampionLevel","championPointsSinceLastLevel","setChampionPointsSinceLastLevel","mostPlayedChampId","setMostPlayedChampId","mostPlayedChampionPoints","setMostPlayedChampionPoints","amountOfChampionsPlayed","setAmountOfChampionsPlayed","riotKey","getMatch","matchId","a","link","fetch","response","json","gameId","console","log","i","participants","stats","kills","deaths","assists","totalDamageDealtToChampions","teams","win","goldEarned","championId","oldValue","summonerNames","participantIdentities","player","oldArray","length","sumId","highestScore","score","queueType","accId","matches","ch","includes","spaceSpot","indexOf","substring","data","id","accountId","puuuid","revisionDate","x","champImg","MostPlayedChampImg","summonerImg","champVo","champBackground","winrate","Number","parseFloat","toFixed","split","rankGoldImg","toLowerCase","rankSilverImg","rankPlatImg","flexSilverImg","flexGoldImg","flexPlatImg","silverBanner","goldBanner","platinumBanner","chromaImg","positionImg","useEffect","getMatchList","fetchSumByName","getSummonerRankings","getSummonerChampionMastery","className","onSubmit","e","preventDefault","type","placeholder","onChange","target","value","spellcheck","style","backgroundImage","backgroundPosition","backgroundSize","src","alt","backgroundRepeat","height","paddingBottom","display","width","color","title","allow","slice","filter","result","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27859eb2.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useEffect, useState } from \"react\";\n\n// https://riot-api-libraries.readthedocs.io/en/latest/ddragon.html    <----------- images etc\n\nfunction App() {\n  const [gameId, setGameId] = useState(\"\");\n  const [champion, setChampion] = useState(\"\");\n  const [queue, setQueue] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [lane, setLane] = useState(\"\");\n  const [summonerLevel, setSummonerLevel] = useState(\"\");\n  const [profileIconId, setProfileIconId] = useState(\"\");\n  const [accountId, setAccountId] = useState(\"\");\n  const [summonerId, setSummonerId] = useState(\"\");\n  const [summonerName, setSummonerName] = useState(\"\");\n  const [input, setInput] = useState(summonerName);\n  const [totalGames, setTotalGames] = useState(\"\");\n  const [totalRankedGames, setTotalRankedGames] = useState(\"\");\n\n  //stats\n  const [rank, setRank] = useState(\"\");\n  const [tier, setTier] = useState(\"\");\n  const [flexRank, setFlexRank] = useState(\"\");\n  const [flexTier, setFlexTier] = useState(\"\");\n  const [wins, setWins] = useState([]);\n  const [losses, setLosses] = useState([]);\n  const [hotStreak, setHotStreak] = useState([]);\n  //players for lobby\n  const [summonerKills, setSummonerKills] = useState([]);\n  const [summonerDeaths, setSummonerDeaths] = useState([]);\n  const [summonerAssists, setSummonerAssists] = useState([]);\n  const [summonerDamageDoneToChampions, setSummonerDamageDoneToChampions] =\n    useState([]);\n  const [teamOne, setTeamOne] = useState([]);\n  const [teamTwo, setTeamTwo] = useState([]);\n  const [summonerGold, setSummonerGold] = useState([]);\n  const [summonersInMatch, setSummonersInMatch] = useState([]);\n  const [summonerChampionId, setSummonerChampionId] = useState([]);\n  const [visionScore, setVisionScore] = useState([]);\n  //champion stats\n  const [championPoints, setChampionPoints] = useState([\"\"]);\n  const [championLevel, setChampionLevel] = useState([\"\"]);\n  const [championPointsSinceLastLevel, setChampionPointsSinceLastLevel] =\n    useState([\"\"]);\n  const [mostPlayedChampId, setMostPlayedChampId] = useState([\"\"]);\n  const [mostPlayedChampionPoints, setMostPlayedChampionPoints] = useState([\n    \"\",\n  ]);\n  const [amountOfChampionsPlayed, setAmountOfChampionsPlayed] = useState([\"\"]);\n\n  const riotKey = \"api_key=RGAPI-7b2c9519-a904-4f09-9a45-f529e1ac36eb\";\n  const sp = \"%20\";\n\n  async function getMatch(matchId) {\n    let link =\n      \"https://euw1.api.riotgames.com/lol/match/v4/matches/\" +\n      (await matchId) +\n      \"?\";\n\n    link += riotKey;\n    let response = await fetch(link);\n    response = await response.json();\n    const gameId = response.gameId;\n    setGameId(gameId);\n\n    console.log(response);\n\n    /* \n    totalHeal: 968\ntotalMinionsKilled: 159\nvisionScore: 21\nvisionWardsBoughtInGame: 4\nwardsKilled: 2\nwardsPlaced: 7\n\n    */\n\n    for (let i = 0; i < response.participants.length; i++) {\n      const summonerKills = [response.participants[i].stats.kills];\n      const summonerDeaths = [response.participants[i].stats.deaths];\n      const summonerAssists = [response.participants[i].stats.assists];\n      const summonerDamageDoneToChampions = [\n        response.participants[i].stats.totalDamageDealtToChampions,\n      ];\n      const visionScore = [response.participants[i].stats.visionScore];\n      const teamOne = [response.teams[0].win];\n      const teamTwo = [response.teams[1].win];\n      const summonerGold = [response.participants[i].stats.goldEarned];\n      const summonerChampionId = [response.participants[i].championId];\n      setSummonerKills((oldValue) => [...oldValue, summonerKills]);\n      setSummonerDeaths((oldValue) => [...oldValue, summonerDeaths]);\n      setSummonerAssists((oldValue) => [...oldValue, summonerAssists]);\n      setSummonerDamageDoneToChampions((oldValue) => [\n        ...oldValue,\n        summonerDamageDoneToChampions,\n      ]);\n      setVisionScore((oldValue) => [...oldValue, visionScore]);\n      setTeamOne((oldValue) => [...oldValue, teamOne]);\n      setTeamTwo((oldValue) => [...oldValue, teamTwo]);\n      setSummonerGold((oldValue) => [...oldValue, summonerGold]);\n      setSummonerChampionId((oldValue) => [...oldValue, summonerChampionId]);\n\n      for (let i = 0; i < response.participantIdentities.length; i++) {\n        const summonerNames = [\n          response.participantIdentities[i].player.summonerName,\n        ];\n        setSummonersInMatch((oldArray) => [...oldArray, summonerNames]);\n      }\n    }\n  }\n  async function getSummonerChampionMastery(sumId) {\n    let link =\n      `https://euw1.api.riotgames.com/lol/champion-mastery/v4/champion-masteries/by-summoner/` +\n      (await sumId) +\n      \"?\";\n    link += riotKey;\n    let response = await fetch(link);\n    response = await response.json();\n\n    setAmountOfChampionsPlayed(response.length);\n\n    let highestScore = 500;\n    for (let i = 0; i < response.length; i++) {\n      let score = response[i].championPoints;\n      if (score > highestScore) {\n        highestScore = score;\n      }\n      setMostPlayedChampId(response[0].championId);\n      setMostPlayedChampionPoints(highestScore);\n    }\n\n    for (let i = 0; i < response.length; i++) {\n      if (response[i].championId == champion) {\n        setChampionPoints(response[i].championPoints);\n        setChampionLevel(response[i].championLevel);\n        setChampionPointsSinceLastLevel(\n          response[i].championPointsSinceLastLevel\n        );\n      }\n    }\n  }\n\n  async function getSummonerRankings(sumId) {\n    let link =\n      `https://euw1.api.riotgames.com/lol/league/v4/entries/by-summoner/` +\n      (await sumId) +\n      \"?\";\n\n    link += riotKey;\n    let response = await fetch(link);\n    response = await response.json();\n\n    for (let i = 0; i < response.length; i++) {\n      setHotStreak(response[i].hotStreak);\n      if (response[i].queueType == \"RANKED_SOLO_5x5\") {\n        setRank(response[i].rank);\n        setTier(response[i].tier);\n        setWins(response[i].wins);\n        setLosses(response[i].losses);\n        setTotalRankedGames(response[i].wins + response[i].losses);\n      } else if (response[i].queueType == \"RANKED_FLEX_SR\") {\n        setFlexRank(response[i].rank);\n        setFlexTier(response[i].tier);\n      } else {\n        console.log(\"didnt find\");\n      }\n    }\n  }\n\n  async function getMatchList(accId) {\n    let link =\n      \"https://euw1.api.riotgames.com/lol/match/v4/matchlists/by-account/\" +\n      (await accId) +\n      \"?\";\n\n    link += riotKey;\n    //use link to grab information\n    let response = await fetch(link);\n    response = await response.json();\n\n    //state\n    setQueue(response.matches[0].queue);\n    setChampion(response.matches[0].champion);\n    setLane(response.matches[0].lane);\n    setTotalGames(response.totalGames);\n    //functions\n    getMatch(response.matches[0].gameId);\n  }\n\n  async function fetchSumByName(name, ch) {\n    //turns name into link format\n    while (name.includes(\" \")) {\n      let spaceSpot = name.indexOf(\" \");\n      name = name.substring(0, spaceSpot) + sp + name.substring(spaceSpot + 1);\n    }\n    //request to riots api\n    const link = `https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-name/${name}?${riotKey}`;\n    const response = await fetch(link);\n    //turns the return value to json\n    let data = await response.json();\n    setName(data.name);\n    setSummonerLevel(data.summonerLevel);\n    setProfileIconId(data.profileIconId);\n    setSummonerId(data.id);\n    setAccountId(data.accountId);\n\n    if (ch == \"id\") {\n      console.log(\"wrong one\");\n      return data.id;\n    } else if (ch == \"accountId\") {\n      return data.accountId;\n    } else if (ch == \"puuuid\") {\n      return data.puuuid;\n    } else if (ch == \"revisionDate\") {\n      return data.revisionDate;\n    } else if (ch == \"summonerLevel\") {\n      return data.summonerLevel;\n    } else {\n      console.log(\"ch is not valid\");\n      return null;\n    }\n  }\n\n  const champImg = `https://raw.communitydragon.org/latest/plugins/rcp-be-lol-game-data/global/default/v1/champion-icons/${champion}.png`;\n  const MostPlayedChampImg = `https://raw.communitydragon.org/latest/plugins/rcp-be-lol-game-data/global/default/v1/champion-icons/${mostPlayedChampId}.png`;\n  const summonerImg = `https://raw.communitydragon.org/latest/plugins/rcp-be-lol-game-data/global/default/v1/profile-icons/${profileIconId}.jpg`;\n  const champVo = `https://raw.communitydragon.org/latest/plugins/rcp-be-lol-game-data/global/default/v1/champion-choose-vo/${champion}.ogg`;\n  const champBackground = `https://raw.communitydragon.org/latest/plugins/rcp-be-lol-game-data/global/default/v1/champion-splashes/${champion}/${\n    champion + \"000\"\n  }.jpg`;\n\n  // Calculations\n  function financial(x) {\n    return Number.parseFloat(x).toFixed(2).substring(2, 5).split(\".\");\n  }\n  let winrate = financial(wins / totalRankedGames);\n\n  // Rank images\n  const rankGoldImg = `https://raw.communitydragon.org/latest/plugins/rcp-be-lol-game-data/global/default/content/src/leagueclient/rankedcrests/04_gold/images/${tier.toLowerCase()}_s3_sheeng.png`;\n  const rankSilverImg = `https://raw.communitydragon.org/latest/plugins/rcp-be-lol-game-data/global/default/content/src/leagueclient/rankedcrests/03_silver/images/${tier.toLowerCase()}_sr3_sheeng.png`;\n  const rankPlatImg = `https://raw.communitydragon.org/latest/plugins/rcp-be-lol-game-data/global/default/content/src/leagueclient/rankedcrests/05_platinum/images/${tier.toLowerCase()}_s3_sheeng.png`;\n\n  const flexSilverImg = `https://raw.communitydragon.org/latest/plugins/rcp-be-lol-game-data/global/default/content/src/leagueclient/rankedcrests/03_silver/images/${flexTier.toLowerCase()}_sr3_sheeng.png`;\n\n  const flexGoldImg = `https://raw.communitydragon.org/latest/plugins/rcp-be-lol-game-data/global/default/content/src/leagueclient/rankedcrests/04_gold/images/${flexTier.toLowerCase()}_s3_sheeng.png`;\n\n  const flexPlatImg = `https://raw.communitydragon.org/latest/plugins/rcp-be-lol-game-data/global/default/content/src/leagueclient/rankedcrests/05_platinum/images/${flexTier.toLowerCase()}_s3_sheeng.png`;\n\n  const silverBanner = `https://raw.communitydragon.org/10.1/game/assets/loadouts/regalia/banners/03_silver_banner.png`;\n  const goldBanner = `https://raw.communitydragon.org/10.1/game/assets/loadouts/regalia/banners/04_gold_banner.png`;\n  const platinumBanner = `https://raw.communitydragon.org/10.1/game/assets/loadouts/regalia/banners/05_platinum_banner.png`;\n\n  // Chroma images\n  const chromaImg = `https://raw.communitydragon.org/latest/plugins/rcp-be-lol-game-data/global/default/v1/champion-chroma-images/${champion}/${champion}016.png`;\n\n  // Position images\n\n  const positionImg = `https://raw.communitydragon.org/latest/plugins/rcp-be-lol-game-data/global/default/assets/ranked/positions/rankposition_${tier.toLowerCase()}-${lane.toLowerCase()}.png`;\n\n  //TODO\n  /*\n  KDA ?\n Fixa rank snyggare. \n Fixa ScoreBoard snyggare.\n Byta bakgrundsbild för summoner profile.\n\n Uppdatera matchlista\n */\n\n  const chooseSummoner = (e) => {\n    setInput(e.target.value);\n  };\n\n  const submitHandler = (e) => {\n    if (input) {\n      setSummonerName(input);\n      e.preventDefault();\n    }\n  };\n\n  useEffect(() => {\n    if (input) {\n      getMatchList(fetchSumByName(input, \"accountId\"));\n      console.log(\"updated history\");\n    }\n  }, [summonerName]);\n\n  useEffect(() => {\n    if (summonerId) {\n      getSummonerRankings(summonerId);\n      console.log(\"fetched summoner rankings\");\n    }\n  }, [summonerId]);\n\n  useEffect(() => {\n    if (summonerId) {\n      getSummonerChampionMastery(summonerId);\n      console.log(\"fetched summoner champion masteries\");\n    }\n  }, [champion]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"summoner__form\">\n        <form onSubmit={submitHandler}>\n          <input\n            type=\"text\"\n            placeholder=\"Search summoner (EUW only)\"\n            onChange={chooseSummoner}\n            spellcheck=\"false\"\n          />\n        </form>\n      </div>\n\n      {summonerName ? (\n        <div className=\"champion__card\">\n          <div\n            className=\"summoner__title\"\n            style={{\n              backgroundImage: `url(${champBackground})`,\n              backgroundPosition: \"center\",\n              backgroundSize: \"cover\",\n            }}\n          >\n            <img src={summonerImg} alt=\"didnt find sum img\" />\n            <h3>{name}</h3>\n            <h3 className=\"total__games\">TotalGames: {totalGames}</h3>\n            <h3>\n              Level: <br />\n              {summonerLevel}\n            </h3>\n          </div>\n          <div className=\"rank__container\">\n            {tier == \"GOLD\" ? (\n              <div\n                className=\"rank__info\"\n                style={{\n                  backgroundImage: `url(${goldBanner})`,\n                  backgroundPosition: \"center\",\n                  backgroundSize: \"contain\",\n                  backgroundRepeat: \"no-repeat\",\n                  height: \"150px\",\n                  paddingBottom: \"30px\",\n                  display: \"initial\",\n                  width: \"100%\",\n                }}\n              >\n                <h5 style={{ color: \"white\" }}>\n                  {tier == \"GOLD\" ? (\n                    <img src={rankGoldImg} alt=\"didnt find rank img\" />\n                  ) : null}\n                  {tier == \"SILVER\" ? (\n                    <img src={rankSilverImg} alt=\"didnt find silver rank img\" />\n                  ) : null}\n                  {tier == \"PLATINUM\" ? (\n                    <img src={rankPlatImg} alt=\"didnt find platinum rank img\" />\n                  ) : null}\n                </h5>\n                <h5 style={{ color: \"white\" }}>{rank}</h5>\n              </div>\n            ) : null}\n\n            {tier == \"SILVER\" ? (\n              <div\n                className=\"rank__info\"\n                style={{\n                  backgroundImage: `url(${silverBanner})`,\n                  backgroundPosition: \"center\",\n                  backgroundSize: \"contain\",\n                  backgroundRepeat: \"no-repeat\",\n                  height: \"150px\",\n                  paddingBottom: \"30px\",\n                  display: \"initial\",\n                  width: \"100%\",\n                }}\n              >\n                <h5 style={{ color: \"white\" }}>\n                  {tier == \"GOLD\" ? (\n                    <img src={rankGoldImg} alt=\"didnt find rank img\" />\n                  ) : null}\n                  {tier == \"SILVER\" ? (\n                    <img src={rankSilverImg} alt=\"didnt find silver rank img\" />\n                  ) : null}\n                  {tier == \"PLATINUM\" ? (\n                    <img src={rankPlatImg} alt=\"didnt find platinum rank img\" />\n                  ) : null}\n                </h5>\n                <h5 style={{ color: \"white\" }}>{rank}</h5>\n              </div>\n            ) : null}\n\n            {tier == \"PLATINUM\" ? (\n              <div\n                className=\"rank__info\"\n                style={{\n                  backgroundImage: `url(${platinumBanner})`,\n                  backgroundPosition: \"center\",\n                  backgroundSize: \"contain\",\n                  backgroundRepeat: \"no-repeat\",\n                  height: \"150px\",\n                  paddingBottom: \"30px\",\n                  display: \"initial\",\n                  width: \"100%\",\n                }}\n              >\n                <h5 style={{ color: \"white\" }}>\n                  {tier == \"GOLD\" ? (\n                    <img src={rankGoldImg} alt=\"didnt find rank img\" />\n                  ) : null}\n                  {tier == \"SILVER\" ? (\n                    <img src={rankSilverImg} alt=\"didnt find silver rank img\" />\n                  ) : null}\n                  {tier == \"PLATINUM\" ? (\n                    <img src={rankPlatImg} alt=\"didnt find platinum rank img\" />\n                  ) : null}\n                </h5>\n                <h5 style={{ color: \"white\" }}>{rank}</h5>\n              </div>\n            ) : null}\n\n            {flexTier == \"GOLD\" ? (\n              <div\n                className=\"rank__info\"\n                style={{\n                  backgroundImage: `url(${goldBanner})`,\n                  backgroundPosition: \"center\",\n                  backgroundSize: \"contain\",\n                  backgroundRepeat: \"no-repeat\",\n                  height: \"150px\",\n                  paddingBottom: \"30px\",\n                  display: \"initial\",\n                  width: \"100%\",\n                }}\n              >\n                <h5 style={{ color: \"white\" }}>\n                  {flexTier == \"SILVER\" ? (\n                    <img src={flexSilverImg} alt=\"didnt find silver rank img\" />\n                  ) : null}\n                  {flexTier == \"GOLD\" ? (\n                    <img src={flexGoldImg} alt=\"didnt find rank img\" />\n                  ) : null}\n                  {flexTier == \"PLATINUM\" ? (\n                    <img src={flexPlatImg} alt=\"didnt find platinum rank img\" />\n                  ) : null}\n                </h5>\n                <h5 style={{ color: \"white\" }}>{flexRank}</h5>\n              </div>\n            ) : null}\n\n            {flexTier == \"SILVER\" ? (\n              <div\n                className=\"rank__info\"\n                style={{\n                  backgroundImage: `url(${silverBanner})`,\n                  backgroundPosition: \"center\",\n                  backgroundSize: \"contain\",\n                  backgroundRepeat: \"no-repeat\",\n                  height: \"150px\",\n                  paddingBottom: \"30px\",\n                  display: \"initial\",\n                  width: \"100%\",\n                }}\n              >\n                <h5 style={{ color: \"white\" }}>\n                  {flexTier == \"SILVER\" ? (\n                    <img src={flexSilverImg} alt=\"didnt find silver rank img\" />\n                  ) : null}\n                  {flexTier == \"GOLD\" ? (\n                    <img src={flexGoldImg} alt=\"didnt find rank img\" />\n                  ) : null}\n                  {flexTier == \"PLATINUM\" ? (\n                    <img src={flexPlatImg} alt=\"didnt find platinum rank img\" />\n                  ) : null}\n                </h5>\n                <h5 style={{ color: \"white\" }}>{flexRank}</h5>\n              </div>\n            ) : null}\n\n            {flexTier == \"PLATNINUM\" ? (\n              <div\n                className=\"rank__info\"\n                style={{\n                  backgroundImage: `url(${platinumBanner})`,\n                  backgroundPosition: \"center\",\n                  backgroundSize: \"contain\",\n                  backgroundRepeat: \"no-repeat\",\n                  height: \"150px\",\n                  paddingBottom: \"30px\",\n                  display: \"initial\",\n                  width: \"100%\",\n                }}\n              >\n                <h5 style={{ color: \"white\" }}>\n                  {flexTier == \"SILVER\" ? (\n                    <img src={flexSilverImg} alt=\"didnt find silver rank img\" />\n                  ) : null}\n                  {flexTier == \"GOLD\" ? (\n                    <img src={flexGoldImg} alt=\"didnt find rank img\" />\n                  ) : null}\n                  {flexTier == \"PLATINUM\" ? (\n                    <img src={flexPlatImg} alt=\"didnt find platinum rank img\" />\n                  ) : null}\n                </h5>\n                <h5 style={{ color: \"white\" }}>{flexRank}</h5>\n              </div>\n            ) : null}\n          </div>\n          <div className=\"winning__container\">\n            <h3>Solo RankedGames: {totalRankedGames}</h3>\n            <h3 style={{ color: \"green\" }}>Wins: {wins ? wins : null}</h3>\n            <h3 style={{ color: \"red\" }}>Losses: {losses ? losses : null}</h3>\n            {winrate >= 60 ? (\n              <h4 style={{ color: \"gold\" }}>{\"Winrate: \" + winrate + \"%\"}</h4>\n            ) : null || winrate >= 50 ? (\n              <h4 style={{ color: \"limegreen\" }}>\n                {\"Winrate: \" + winrate + \"%\"}\n              </h4>\n            ) : null || winrate < 50 ? (\n              <h4 style={{ color: \"red\" }}>{\"Winrate: \" + winrate + \"%\"}</h4>\n            ) : null}\n\n            <h3>{hotStreak == true ? \"On a hotstreak\" : null}</h3>\n          </div>\n          <div\n            className=\"match__info\"\n            style={{\n              backgroundImage: `url(${chromaImg})`,\n              backgroundPosition: \"center center\",\n              backgroundSize: \"contain\",\n              color: \"white\",\n              backgroundRepeat: \"no-repeat\",\n            }}\n          >\n            <div className=\"lane__info\">\n              <img src={champImg} alt=\"didnt find img\" />\n              <h4>\n                {lane == \"NONE\" ? null : (\n                  <img src={positionImg} alt=\"didnt find lane img\" />\n                )}\n              </h4>\n              <h4>\n                {queue == \"400\"\n                  ? \"SoloQ BLIND PICK\"\n                  : null || queue == \"420\"\n                  ? \"SoloQ RANKED\"\n                  : null || queue == \"440\"\n                  ? \"Flex RANKED\"\n                  : null || queue == \"450\"\n                  ? \"Howling Abyss\"\n                  : null}\n              </h4>\n            </div>\n\n            {champion ? (\n              <iframe\n                src={champVo}\n                title=\"hej\"\n                allow=\"autoplay\"\n                style={{ display: \"none\" }}\n                id=\"iframeAudio\"\n              ></iframe>\n            ) : null}\n\n            <div className=\"champ__info\">\n              <h3>\n                {championPointsSinceLastLevel > 200000\n                  ? \"OTP \" + championPointsSinceLastLevel\n                  : null}\n              </h3>\n              <h3>\n                {championLevel >= 2 ? \"Champ lvl: \" + championLevel : null}\n              </h3>\n              <h3>\n                {championPoints >= 1000\n                  ? \"Champ points: \" + championPoints\n                  : null}{\" \"}\n              </h3>\n            </div>\n          </div>\n\n          <div className=\"match__container\">\n            <div className=\"winOrLose\">\n              {teamOne\n                .slice(0, 1)\n                .filter((result) => result.includes(\"Win\"))\n                .map((name, id) => {\n                  return (\n                    <p key={id} style={{ color: \"green\" }}>\n                      {\"Result:\" + name ? \"Game won!!!\" : null}\n                    </p>\n                  );\n                })}\n              {teamOne\n                .slice(0, 1)\n                .filter((result) => result.includes(\"Fail\"))\n                .map((name, id) => {\n                  return (\n                    <p key={id} style={{ color: \"red\" }}>\n                      {\"Result:\" + name ? \"Game Lost!!\" : null}\n                    </p>\n                  );\n                })}\n            </div>\n            <div className=\"test1\">\n              <div className=\"scoreboard__champ__id\">\n                {summonerChampionId.slice(0, 5).map((name, id) => {\n                  return (\n                    <div className=\"scoreboard__champ__img\">\n                      <img\n                        key={id}\n                        src={`https://raw.communitydragon.org/latest/plugins/rcp-be-lol-game-data/global/default/v1/champion-icons/${name}.png`}\n                        alt=\"didnt find img\"\n                      />\n                    </div>\n                  );\n                })}\n              </div>\n              <div className=\"name\">\n                {summonersInMatch.slice(0, 5).map((name, id) => {\n                  return <p key={id}>{name}</p>;\n                })}\n              </div>\n              <div className=\"kills\">\n                {summonerKills.slice(0, 5).map((name, id) => {\n                  return <p key={id}>{\"kills:\" + name}</p>;\n                })}\n              </div>\n              <div className=\"deaths\">\n                {summonerDeaths.slice(0, 5).map((name, id) => {\n                  return <p key={id}>{\"deaths:\" + name}</p>;\n                })}\n              </div>\n              <div className=\"assists\">\n                {summonerAssists.slice(0, 5).map((name, id) => {\n                  return <p key={id}>{\"Assists:\" + name}</p>;\n                })}\n              </div>\n              <div className=\"dmgDone\">\n                {summonerDamageDoneToChampions.slice(0, 5).map((name, id) => {\n                  return <p key={id}>{\"Damage:\" + name}</p>;\n                })}\n              </div>\n\n              <div className=\"gold__earned\">\n                {summonerGold.slice(0, 5).map((name, id) => {\n                  return <p key={id}>{\"Gold:\" + name}</p>;\n                })}\n              </div>\n              <div className=\"visionScore\">\n                {visionScore.slice(0, 5).map((name, id) => {\n                  return <p key={id}>{\"Visionscore:\" + name}</p>;\n                })}\n              </div>\n            </div>\n            <hr />\n            <div className=\"winOrLose\">\n              {teamTwo\n                .slice(0, 1)\n                .filter((result) => result.includes(\"Win\"))\n                .map((name, id) => {\n                  return (\n                    <p key={id} style={{ color: \"green\" }}>\n                      {\"Result:\" + name ? \"Game won!!!\" : null}\n                    </p>\n                  );\n                })}\n              {teamTwo\n                .slice(0, 1)\n                .filter((result) => result.includes(\"Fail\"))\n                .map((name, id) => {\n                  return (\n                    <p key={id} style={{ color: \"red\" }}>\n                      {\"Result:\" + name ? \"Game Lost!!\" : null}\n                    </p>\n                  );\n                })}\n            </div>\n            <div className=\"test2\">\n              <div className=\"scoreboard__champ__id\">\n                {summonerChampionId.slice(-5).map((name, id) => {\n                  return (\n                    <div className=\"scoreboard__champ__img\">\n                      <img\n                        key={id}\n                        src={`https://raw.communitydragon.org/latest/plugins/rcp-be-lol-game-data/global/default/v1/champion-icons/${name}.png`}\n                        alt=\"didnt find img\"\n                      />\n                    </div>\n                  );\n                })}\n              </div>\n              <div className=\"name\">\n                {summonersInMatch.slice(-5).map((name, id) => {\n                  return <p key={id}>{name}</p>;\n                })}\n              </div>\n              <div className=\"kills\">\n                {summonerKills.slice(-5).map((name, id) => {\n                  return <p key={id}>{\"kills:\" + name}</p>;\n                })}\n              </div>\n              <div className=\"deaths\">\n                {summonerDeaths.slice(-5).map((name, id) => {\n                  return <p key={id}>{\"deaths:\" + name}</p>;\n                })}\n              </div>\n              <div className=\"assists\">\n                {summonerAssists.slice(-5).map((name, id) => {\n                  return <p key={id}>{\"Assists:\" + name}</p>;\n                })}\n              </div>\n              <div className=\"dmgDone\">\n                {summonerDamageDoneToChampions.slice(-5).map((name, id) => {\n                  return <p key={id}>{\"Damage:\" + name}</p>;\n                })}\n              </div>\n              <div className=\"gold__earned\">\n                {summonerGold.slice(-5).map((name, id) => {\n                  return <p key={id}>{\"Gold:\" + name}</p>;\n                })}\n              </div>\n              <div className=\"visionScore\">\n                {visionScore.slice(-5).map((name, id) => {\n                  return <p key={id}>{\"Visionscore:\" + name}</p>;\n                })}\n              </div>\n            </div>\n          </div>\n          <div className=\"champion__mastery__container\">\n            <img src={MostPlayedChampImg} alt=\"didnt find champ img \" />\n            <h5>Most played: {mostPlayedChampionPoints}</h5>\n            <h5>Amount of champions played: {amountOfChampionsPlayed}</h5>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}